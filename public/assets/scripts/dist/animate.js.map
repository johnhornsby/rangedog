{"version":3,"sources":["public/assets/scripts/src/animate.js"],"names":[],"mappings":"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","file":"public/assets/scripts/src/animate.js","sourcesContent":["import Utils from \"./utils\";\nimport Friction from \"./animators/friction\";\n\nconst Animate = class Animate {\n\n  \n  constructor(options) {\n   \n    this._DEFAULT_OPTIONS = {\n      time: 1000,\n      startValue: 0,\n      endValue: 1, \n      update: function(){},\n      complete: function(){}\n    };\n\n    this._time = null;\n    this._startValue = null;\n    this._endValue = null;\n\n    this._lastTime = null;\n    this._startTime = null;\n    this._options = {};\n    this._deltas = null;\n    this._isAnimating = false;\n    this._animator = null;\n    this._nowValue = null;\n\n    this._init(options);\n    return this;\n  }\n  \n  \n  start() {\n    this._lastTime = 0;\n    this._startTime = 0;\n    this._deltas = [];\n\n    this._animator = new Friction();\n    this._start();\n    return this;      \n  }\n\n\n  destroy() {\n    console.log(\"destroy\");\n    window.cancelAnimationFrame(this._requestionAnimationFrameID);\n    this._options = null;\n  }\n\n  \n  _init(options) {\n    // Quick merge of default and incoming options\n    Utils.extend(this._options, this._DEFAULT_OPTIONS);\n    Utils.extend(this._options, options);\n    \n    // time we can ignore for some of the animators\n    this._time = this._options.time;\n    this._startValue = this._options.startValue;\n    this._endValue = this._options.endValue;\n  }\n  \n\n  _start() {\n    this._isAnimating = true;\n    this._startTime = this._lastTime = new Date().getTime();\n    this._tick();\n  }\n  \n  \n  _tick() {\n    const now = new Date().getTime();\n    let delta = (now - this._lastTime) / this._time;\n    this._lastTime = now;\n\n    // pass in normalised delta\n    const normalisedAnimatedValue = this._animator.step(delta);\n\n    if (this._animator.isFinished() === false) {\n      this._nowValue = this._startValue + ((this._endValue - this._startValue) * normalisedAnimatedValue);\n      this._options.update(this._nowValue);\n      this._requestionAnimationFrameID = window.requestAnimationFrame(this._tick.bind(this));\n    } else {\n      this._nowValue = this._endValue\n      this._options.update(this._nowValue);\n      this._options.complete();\n      this._isAnimating = false;\n    }\n  }\n}\n\nexport default Animate;"]}