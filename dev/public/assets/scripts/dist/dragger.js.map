{"version":3,"sources":["dev/public/assets/scripts/src/dragger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;KAGqB,OAAO;AAGhB,WAHS,OAAO,CAGf,IAAI,EAAE;yBAHE,OAAO;;AAI1B,8BAJmB,OAAO,6CAIlB;;AAER,OAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,OAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,OAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,OAAI,CAAC,WAAW,GAAG,KAAK,CAAC;GACzB;;YAVmB,OAAO;;eAAP,OAAO;;UAanB,oBAAG;AACV,QAAI,CAAC,OAAO,GAAG,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;AAC/B,QAAI,CAAC,WAAW,EAAE,CAAC;IACrB;;;UAGQ,mBAAC,KAAK,EAAE,OAAO,EAAE;AACzB,WAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,QAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,QAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,QAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvB;;;UAGO,kBAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAG;;AAEtC,QAAM,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC;;AAExC,QAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;AAE7B,QAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;AAEf,QAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC7B;;;UAGM,iBAAE,KAAK,EAAE,OAAO,EAAG;AACxB,QAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,WAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvB,QAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtB;;;UAEU,qBAAC,KAAK,EAAE,OAAO,EAAE;AAC3B,QAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;AAC9B,YAAO;KACP;AACD,QAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC3E;;;SAlDmB,OAAO;;;kBAAP,OAAO","file":"dev/public/assets/scripts/src/dragger.js","sourcesContent":["import Unidragger from \"unidragger\"\n\n\nexport default class Dragger extends Unidragger {\n\t\n\n\tconstructor(elem) {\n\t\tsuper();\n\t\t\n\t\tthis._element = elem;\n\t\tthis._last = 0; \n\t\tthis._modifier = 0.25;\n\t\tthis._isDragging = false;\n\t}\n\n\n\tactivate() {\n\t\tthis.handles = [ this._element ];\n  \t\tthis.bindHandles();\n\t}\n\n\n\tdragStart(event, pointer) {\n\t\tconsole.log(\"dragStart\");\n\t\tthis._last = 0;\n\t\tthis._isDragging = true;\n\t\tthis.emit(\"dragStart\");\n\t}\n\n\n\tdragMove( event, pointer, moveVector ) {\n\t\t// console.log(\"dragMove\");\n\t\tconst x = this._modifier * moveVector.x;\n\n\t\tconst delta = x - this._last;\n\n\t\tthis._last = x;\n\n\t\tthis.emit(\"dragMove\", delta);\n\t}\n\n\n\tdragEnd( event, pointer ) {\n\t  this._isDragging = false;\n\t  console.log(\"dragEnd\");\n\t  this.emit(\"dragEnd\");\n\t}\n\n\tpointerDone(event, pointer) {\n\t\tif (this._isDragging === true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emit(\"pointerDone\", this.pointerDownPoint.x, this.pointerDownPoint.y);\n\t}\n}"]}